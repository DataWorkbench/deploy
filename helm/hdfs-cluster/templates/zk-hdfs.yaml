apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: zk-hdfs
spec:
  ports:
  - port: 2888
    name: server
  - port: 2181
    name: client
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk-hdfs
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk-hdfs
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk-hdfs
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: zk-hdfs
spec:
  selector:
    matchLabels:
      app: zk-hdfs
  serviceName: zk-hs
  replicas: {{ include "zookeeper.length" . }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zk-hdfs
    spec:
      containers:
      - name: kubernetes-zookeeper
        #imagePullPolicy: Always
        image: {{ .Values.imageRegistry }}/{{ .Values.zookeeper.image }}
        resources:
          requests:
            memory: "200Mi"
            cpu: "0.1"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=2000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=512M \
          --max_client_cnxns=60 \
          --snap_retain_count=3 \
          --purge_interval=12 \
          --max_session_timeout=40000 \
          --min_session_timeout=4000 \
          --log_level=INFO"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.storageClass }}
      storageClassName: {{ .Values.storageClass }}
      {{- else }}
      storageClassName: {{ include "hdfs.fullname" . }}-zookeeper-sc
      {{- end }}
      resources:
        requests:
          storage: 500Mi