apiVersion: pxc.percona.com/v1-5-0
kind: PerconaXtraDBCluster
metadata:
  name: cluster1
  finalizers:
    - delete-pxc-pods-in-order
#    - delete-proxysql-pvc
#    - delete-pxc-pvc
spec:
  secretsName: my-cluster-secrets
  vaultSecretName: keyring-secret-vault
  sslSecretName: my-cluster-ssl
  sslInternalSecretName: my-cluster-ssl-internal
  allowUnsafeConfigurations: false
  updateStrategy: OnDelete
  upgradeOptions:
    versionServiceEndpoint: https://check.percona.com/versions
    apply: recommended
    schedule: "0 4 * * *"
  pxc:
    size: {{ .Values.pxc.size }}
    image: {{ .Values.pxc.image }}
    resources:
      requests:
        memory: {{ .Values.pxc.resources.requests.memory }}
        cpu: {{ .Values.pxc.resources.requests.cpu }}
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: {{ .Values.storageClassName }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.pxc.storage }}
    gracePeriod: 600
  haproxy:
    enabled: {{ .Values.haproxy.enabled }}
    size: {{ .Values.haproxy.size }}
    image: {{ .Values.haproxy.image }}
    resources:
      requests:
        memory: {{ .Values.haproxy.resources.requests.memory }}
        cpu: {{ .Values.haproxy.resources.requests.cpu }}
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    podDisruptionBudget:
      maxUnavailable: 1
#      minAvailable: 0
    volumeSpec:
      persistentVolumeClaim:
        storageClassName: {{ .Values.storageClassName }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.haproxy.storage }}
    gracePeriod: 30
  proxysql:
    enabled: {{ .Values.proxysql.enabled }}
    size: {{ .Values.proxysql.size }}
    image: {{ .Values.proxysql.image }}
    resources:
      requests:
        memory: {{ .Values.proxysql.resources.requests.memory }}
        cpu: {{ .Values.proxysql.storage }}
    affinity:
      antiAffinityTopologyKey: "kubernetes.io/hostname"
    volumeSpec:
#      emptyDir: {}
#      hostPath:
#        path: /data
#        type: Directory
      persistentVolumeClaim:
        storageClassName: {{ .Values.storageClassName }}
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.proxysql.storage }}
    podDisruptionBudget:
      maxUnavailable: 1
#      minAvailable: 0
    gracePeriod: 30
#   loadBalancerSourceRanges:
#     - 10.0.0.0/8
#   serviceAnnotations:
#     service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  pmm:
    enabled: false
    image: percona/percona-xtradb-cluster-operator:1.5.0-pmm
    serverHost: monitoring-service
    serverUser: pmm
#    resources:
#      requests:
#        memory: 200M
#        cpu: 500m
  backup:
    image: {{ .Values.backup.image }}
    serviceAccountName: percona-xtradb-cluster-operator
#    imagePullSecrets:
#      - name: private-registry-credentials
    storages:
      fs-pvc:
        type: filesystem
        volume:
          persistentVolumeClaim:
            storageClassName: {{ .Values.storageClassName }}
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: {{ .Values.backup.storage }}
    schedule:
      - name: {{ .Values.backup.schedule.name }}
        schedule: {{ .Values.backup.schedule.schedule }}
        keep: 5
        storageName: fs-pvc