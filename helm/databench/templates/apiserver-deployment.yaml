apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "databench.fullname" . }}-apiserver
  labels:
{{ include "databench.labels" . | indent 4 }}
    component: apiserver
annotations:
{{- range $key, $value := .Values.apiserver.annotations }}
  {{ $key | quote }}: {{ $value | quote }}
{{- end }}
spec:
  replicas: {{ coalesce .Values.apiserver.replicas .Values.common.replicas }}
  strategy:
    type: {{ coalesce .Values.apiserver.strategy .Values.common.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: apiserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: apiserver
      annotations:
      {{- range $key, $value := .Values.apiserver.podAnnotations }}
        {{ $key | quote }}: {{ $value | quote }}
      {{- end }}
    spec:
      containers:
        - name: apiserver
          image: {{ .Values.image.repo }}/apiserver:{{- .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c", "apiserver start -c ${DATABENCH_CONF}/apiserver.yaml"]
          ports:
            - name: service
              containerPort: {{ .Values.ports.apiserver }}
          env:
            - name: API_SERVER_LOG_LEVEL
              value: {{ coalesce .Values.apiserver.logLevel .Values.common.logLevel | quote }}
            - name: API_SERVER_GRPC_LOG_LEVEL
              value: {{ coalesce .Values.apiserver.grpcLogLevel .Values.common.grpcLog.level | quote }}
            - name: API_SERVER_GRPC_LOG_VERBOSITY
              value: {{ coalesce .Values.apiserver.grpcLogVerbosity .Values.common.grpcLog.verbosity | quote }}
            - name: API_SERVER_HTTP_SERVER_ADDRESS
              value: "0.0.0.0:{{ .Values.ports.apiserver }}"
{{ include "apiserver.link.services" . | indent 12 }}
            {{- range $ename, $evalue := .Values.apiserver.envs }}
            - name: {{ $ename }}
              value: {{ $evalue | quote }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: service
  {{- if .Values.apiserver.readinessProbe }}
            periodSeconds: {{ .Values.apiserver.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.apiserver.readinessProbe.initialDelaySeconds }}
            {{- else }}
            periodSeconds: {{ .Values.common.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.common.readinessProbe.initialDelaySeconds }}
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: service
            {{- if .Values.apiserver.livenessProbe }}
            initialDelaySeconds: {{ .Values.apiserver.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.apiserver.livenessProbe.periodSeconds }}
            {{- else }}
            periodSeconds: {{ .Values.common.livenessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.common.livenessProbe.initialDelaySeconds }}
            {{- end }}
          volumeMounts:
            - name: databench-config
              mountPath: "/etc/dataworkbench"
              readOnly: true
      volumes:
        - name: databench-config
          configMap:
            name: databench-config
            items:
              - key: "config.yaml"
                path: "common-config.yaml"
