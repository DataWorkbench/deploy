apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "databench.fullname" . }}-spacemanager
  labels:
{{ include "databench.labels" . | indent 4 }}
    component: spacemanager
annotations:
  {{- range $key, $value := .Values.spacemanager.annotations }}
  {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
spec:
  replicas: {{ coalesce .Values.common.replicas .Values.spacemanager.replicas }}
  strategy:
    type: {{ coalesce .Values.common.strategy .Values.spacemanager.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: spacemanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: spacemanager
      annotations:
      {{- range $key, $value := .Values.spacemanager.podAnnotations }}
      {{ $key | quote }}: {{ $value | quote }}
      {{- end }}
    spec:
      initContainers:
      - name: wait-mysql
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh', '-c', '{{ include "mysql.waiting.cmd" . }}']
      containers:
      - name: spacemanager
        image: {{ include "databench.image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c", "spacemanager start -c ${DATABENCH_CONF}/common-config.yaml"]
        ports:
          - containerPort: {{ .Values.ports.spaceManager }}
            name: service
          - containerPort: {{ .Values.ports.spaceManagerMetrics }}
            name: metrics
        env:
          - name: SPACE_MANAGER_GRPC_SERVER_ADDRESS
            value: "0.0.0.0:{{- .Values.ports.spaceManager }}"
          - name: SPACE_MANAGER_METRICS_SERVER_ADDRESS
            value: "0.0.0.0:{{- .Values.ports.spaceManagerMetrics }}"
          - name: SPACE_MANAGER_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-mysql-secret
                key: root
          {{- range $ename, $evalue := .Values.spacemanager.envs }}
          - name: {{ $ename }}
            value: {{ $evalue | quote }}
          {{- end }}
        readinessProbe:
          exec:
            command: ["grpc_health_probe", "-addr=:{{ .Values.ports.spaceManager }}"]
          {{- if .Values.spacemanager.readinessProbe }}
          periodSeconds: {{ .Values.spacemanager.readinessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.spacemanager.readinessProbe.initialDelaySeconds }}
          {{- else }}
          periodSeconds: {{ .Values.common.readinessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.common.readinessProbe.initialDelaySeconds }}
          {{- end }}
        livenessProbe:
          exec:
            command: [ "grpc_health_probe", "-addr=:{{ .Values.ports.spaceManager }}" ]
          {{- if .Values.spacemanager.livenessProbe }}
          periodSeconds: {{ .Values.spacemanager.livenessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.spacemanager.livenessProbe.initialDelaySeconds }}
          {{- else }}
          periodSeconds: {{ .Values.common.livenessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.common.livenessProbe.initialDelaySeconds }}
          {{- end }}
        volumeMounts:
          - name: config
            mountPath: "/etc/dataworkbench"
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: databench-config
            items:
              - key: "config.yaml"
                path: "common-config.yaml"