apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "databench.fullname" . }}-zeppelin-server
  labels:
    app.kubernetes.io/name: zeppelin-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zeppelin-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zeppelin-server
    spec:
      serviceAccountName: zeppelin-server
      containers:
        - name: zeppelin-server
          image: {{ .Values.image.zeppelin }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/zeppelin.sh"]
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.server.ZeppelinServer | grep -v grep | awk '{print $2}' | xargs kill"]
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
            - name: rpc
              containerPort: 12320
          env:
            - name: POD_UID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SERVICE_DOMAIN
              value: zeppelin.{{ .Values.domain }}
            - name: ZEPPELIN_K8S_CONTAINER_IMAGE
              value: {{ .Values.image.zeppelinInterpreter }}
            - name: ZEPPELIN_ALLOWED_ORIGINS
              value: "*"
            - name: ZEPPELIN_K8S_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: ZEPPELIN_K8S_SERVICE_NAME
              value: {{ include "databench.fullname" . }}-zeppelin-server
            {{- range $ename, $evalue := .Values.zeppelin.envs }}
            - name: {{ $ename }}
              value: {{ $evalue | quote }}
            {{- end }}
          volumeMounts:
          #  - name: zeppelin-server-notebook-volume     # configure this to persist notebook
          #    mountPath: /zeppelin/notebook
          #  - name: zeppelin-server-conf                # configure this to persist Zeppelin configuration
          #    mountPath: /zeppelin/conf
          #  - name: zeppelin-server-custom-k8s          # configure this to mount customized Kubernetes spec for interpreter
          #    mountPath: /zeppelin/k8s
            - name: hdfs-config         # configure this to mount customized Kubernetes spec for interpreter
              mountPath: {{ .Values.zeppelin.hdfsConfigDir }}
              readOnly: true
      volumes:
        - name: hdfs-config
          configMap:
            name: {{ .Values.hdfs.configmapName }}
            items:
              - key: core-site.xml
                path: core-site.xml
              - key: hdfs-site.xml
                path: hdfs-site.xml
---
kind: Service
apiVersion: v1
metadata:
  name: {{ include "databench.fullname" . }}-zeppelin-server
spec:
  ports:
    - name: http
      port: 8080
    - name: rpc            # port name is referenced in the code. So it shouldn't be changed.
      port: 12320
  selector:
    app.kubernetes.io/name: zeppelin-server

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: zeppelin-server

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zeppelin-server-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["create", "get", "update", "patch", "list", "delete", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["bind", "create", "get", "update", "patch", "list", "delete", "watch"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: zeppelin-server-role-binding
subjects:
  - kind: ServiceAccount
    name: zeppelin-server
roleRef:
  kind: Role
  name: zeppelin-server-role
  apiGroup: rbac.authorization.k8s.io