apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dataomnis.fullname" . }}-scheduler
  labels:
{{ include "dataomnis.labels" . | indent 4 }}
    component: scheduler
annotations:
  {{- range $key, $value := .Values.scheduler.annotations }}
  {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
spec:
  replicas: {{ coalesce .Values.scheduler.replicas .Values.common.replicas }}
  strategy:
    type: {{ coalesce .Values.scheduler.strategy .Values.common.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: scheduler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: scheduler
      annotations:
      {{- range $key, $value := .Values.scheduler.podAnnotations }}
      {{ $key | quote }}: {{ $value | quote }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      initContainers:
      - name: wait-mysql
        image: {{ .Values.image.registry }}/library/{{- .Values.image.busybox }}
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh', '-c', '{{ include "mysql.waiting.cmd" . }}']
      containers:
      - name: scheduler
        image: {{ .Values.image.registry }}/dataomnis/scheduler:{{- .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c", "scheduler start -c /opt/dataomnis/conf/scheduler.yaml"]
        ports:
          - name: service
            containerPort: {{ .Values.ports.scheduler }}
          - name: metrics
            containerPort: {{ .Values.metricsPorts.scheduler }}
        env:
          - name: SCHEDULER_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.mysql.secretName }}
                key: root
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SCHEDULER_LOG_FILE_PATH
            value: "/opt/dataomnis/log/$(POD_NAME).log"
{{ include "scheduler.link.services" . | indent 10 }}
          {{- range $ename, $evalue := .Values.scheduler.envs }}
          - name: {{ $ename }}
            value: {{ $evalue | quote }}
          {{- end }}
        readinessProbe:
          exec:
            command: ["grpc_health_probe", "-addr=:{{ .Values.ports.scheduler }}"]
          {{- if .Values.scheduler.readinessProbe }}
          periodSeconds: {{ .Values.scheduler.readinessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.scheduler.readinessProbe.initialDelaySeconds }}
          {{- else }}
          periodSeconds: {{ .Values.common.readinessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.common.readinessProbe.initialDelaySeconds }}
          {{- end }}
        livenessProbe:
          exec:
            command: ["grpc_health_probe", "-addr=:{{ .Values.ports.scheduler }}"]
          {{- if .Values.scheduler.livenessProbe }}
          periodSeconds: {{ .Values.scheduler.livenessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.scheduler.livenessProbe.initialDelaySeconds }}
          {{- else }}
          periodSeconds: {{ .Values.common.livenessProbe.periodSeconds }}
          initialDelaySeconds: {{ .Values.common.livenessProbe.initialDelaySeconds }}
          {{- end }}
        volumeMounts:
          - name: config
            mountPath: /opt/dataomnis/conf
            readOnly: true
          {{- if eq .Values.common.logOutput "file" }}
          - name: log
            mountPath: /opt/dataomnis/log
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: dataomnis-config
            items:
              - key: scheduler.yaml
                path: scheduler.yaml
        {{- if eq .Values.common.logOutput "file" }}
        - name: log
          hostPath:
            path: {{ .Values.persistent.hostPath }}/log/scheduler
            type: Directory
        {{- end  }}