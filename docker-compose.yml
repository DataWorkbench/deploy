# Copyright 2020 The DataWorkbench Authors. All rights reserved.
# Use of this source code is governed by a Apache license
# that can be found in the LICENSE file.

version: '3'

networks:
  dataworkbench-net:

services:
  dataworkbench-db:
    image: "mysql:8.0.11"
    container_name: "dataworkbench-db"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:${MYSQL_PORT}" # for test & debug
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-db

  dataworkbench-db-init:
    image: "dataworkbench/flyway:latest"
    container_name: "dataworkbench-db-init"
    entrypoint: "sh"
    command: -c "/flyway/sql/ddl/ddl_init.sh -hdataworkbench-db -uroot --connect-timeout=5"
    environment:
      - PASSWORD=${MYSQL_ROOT_PASSWORD}
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-db-init

  dataworkbench-db-ctrl:
    image: "dataworkbench/flyway:latest"
    container_name: "dataworkbench-db-ctrl"
    command: -url=jdbc:mysql://dataworkbench-db/data_workbench -user=root -password=${MYSQL_ROOT_PASSWORD} -validateOnMigrate=false migrate
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-init
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-ctrl

  dataworkbench-etcd:
    image: "quay.io/coreos/etcd:latest"
    container_name: "dataworkbench-etcd"
    volumes:
      - ${DATA_PATH}/etcd:/etcd-data
    command: "/usr/local/bin/etcd --data-dir=/etcd-data --name dataworkbench-etcd --initial-advertise-peer-urls http://0.0.0.0:2380 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379 --initial-cluster dataworkbench-etcd=http://0.0.0.0:2380"
    ports:
      - "2379:${ETCD_SERVER_PORT}" # for test & debug
      - "2380:${ETCD_PEER_PORT}" # for test & debug
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-etcd

  dataworkbench-etcdkeeper:
    image: "deltaprojects/etcdkeeper:latest"
    container_name: "dataworkbench-etcdkeeper"
    ports:
      - "8001:8080" # for test & debug
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-etcdkeeper

  dataworkbench-jaeger:
    image: "jaegertracing/all-in-one:1.22"
    container_name: "dataworkbench-jaeger"
    ports:
      - "5775:5775/udp" # for test & debug
      - "6831:6831/udp" # for test & debug
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - dataworkbench-jaeger

  apiserver:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-apiserver"
    command: "apiserver start -c /dataworkbench/conf/apiserver.yaml"
    ports:
     - "${API_SERVER_PORT}:${API_SERVER_PORT}"
    links:
      - spacemanager
      - flowmanager
      - scheduler
      - sourcemanager
      - jobmanager
      - udfmanager
    depends_on:
      - spacemanager
      - flowmanager
      - scheduler
      - sourcemanager
      - jobmanager
      - udfmanager
      - dataworkbench-jaeger
    environment:
      - API_SERVER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - API_SERVER_READ_TIMEOUT=${API_SERVER_READ_TIMEOUT}
      - API_SERVER_WRITE_TIMEOUT=${API_SERVER_WRITE_TIMEOUT}
      - API_SERVER_DLE_TIMEOUT=${API_SERVER_DLE_TIMEOUT}
      - API_SERVER_EXIT_TIMEOUT=${API_SERVER_EXIT_TIMEOUT}
      - API_SERVER_HTTP_SERVER_ADDRESS=0.0.0.0:${API_SERVER_PORT}
      - API_SERVER_TRACER_SERVICE_NAME=apiserver
      - API_SERVER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
      - API_SERVER_SPACE_MANAGER_ADDRESS=spacemanager:${SPACE_MANAGER_PORT}
      - API_SERVER_SPACE_MANAGER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - API_SERVER_SPACE_MANAGER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - API_SERVER_FLOW_MANAGER_ADDRESS=flowmanager:${FLOW_MANAGER_PORT}
      - API_SERVER_FLOW_MANAGER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - API_SERVER_FLOW_MANAGER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - API_SERVER_SCHEDULER_ADDRESS=scheduler:${SCHEDULER_PORT}
      - API_SERVER_SCHEDULER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - API_SERVER_SCHEDULER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - API_SERVER_SOURCE_MANAGER_ADDRESS=sourcemanager:${SOURCE_MANAGER_PORT}
      - API_SERVER_SOURCE_MANAGER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - API_SERVER_SOURCE_MANAGER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - apiserver

  spacemanager:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-spacemanager"
    command: "spacemanager start -c /dataworkbench/conf/spacemanager.yaml"
    ports:
      - "${SPACE_MANAGER_PORT}:${SPACE_MANAGER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
      - dataworkbench-jaeger
    environment:
      - SPACE_MANAGER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - SPACE_MANAGER_GRPC_SERVER_ADDRESS=0.0.0.0:${SPACE_MANAGER_PORT}
      - SPACE_MANAGER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - SPACE_MANAGER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - SPACE_MANAGER_METRICS_ENABLED=${METRICS_ENABLED}
      - SPACE_MANAGER_METRICS_SERVER_ADDRESS=0.0.0.0:${SPACE_MANAGER_METRICS_PORT}
      - SPACE_MANAGER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - SPACE_MANAGER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - SPACE_MANAGER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SPACE_MANAGER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
      - SPACE_MANAGER_TRACER_SERVICE_NAME=spacemanager
      - SPACE_MANAGER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - spacemanager

  flowmanager:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-flowmanager"
    command: "flowmanager start -c /dataworkbench/conf/flowmanager.yaml"
    ports:
      - "${FLOW_MANAGER_PORT}:${FLOW_MANAGER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
      - dataworkbench-etcd
      - dataworkbench-jaeger
    environment:
      - FLOW_MANAGER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - FLOW_MANAGER_GRPC_SERVER_ADDRESS=0.0.0.0:${FLOW_MANAGER_PORT}
      - FLOW_MANAGER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - FLOW_MANAGER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - FLOW_MANAGER_METRICS_ENABLED=${METRICS_ENABLED}
      - FLOW_MANAGER_METRICS_SERVER_ADDRESS=0.0.0.0:${FLOW_MANAGER_METRICS_PORT}
      - FLOW_MANAGER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - FLOW_MANAGER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - FLOW_MANAGER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - FLOW_MANAGER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
      - FLOW_MANAGER_SCHEDULER_ADDRESS=scheduler:${SCHEDULER_PORT}
      - FLOW_MANAGER_SCHEDULER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - FLOW_MANAGER_SCHEDULER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - FLOW_MANAGER_TRACER_SERVICE_NAME=flowmanager
      - FLOW_MANAGER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - flowmanager

  scheduler:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-scheduler"
    command: "scheduler start -c /dataworkbench/conf/scheduler.yaml"
    ports:
      - "${SCHEDULER_PORT}:${SCHEDULER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
      - dataworkbench-etcd:dataworkbench-etcd
    depends_on:
      - dataworkbench-db-ctrl
      - dataworkbench-etcd
      - dataworkbench-jaeger
    environment:
      - SCHEDULER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - SCHEDULER_GRPC_SERVER_ADDRESS=0.0.0.0:${SCHEDULER_PORT}
      - SCHEDULER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - SCHEDULER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - SCHEDULER_METRICS_ENABLED=${METRICS_ENABLED}
      - SCHEDULER_METRICS_SERVER_ADDRESS=0.0.0.0:${SCHEDULER_METRICS_PORT}
      - SCHEDULER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - SCHEDULER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - SCHEDULER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SCHEDULER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
      - SCHEDULER_ETCD_ENDPOINTS=dataworkbench-etcd:${ETCD_SERVER_PORT}
      - SCHEDULER_ETCD_DIAL_TIMEOUT=5s
      - SCHEDULER_TRACER_SERVICE_NAME=scheduler
      - SCHEDULER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
      - SCHEDULER_FLOW_MANAGER_ADDRESS=flowmanager:${FLOW_MANAGER_PORT}
      - SCHEDULER_FLOW_MANAGER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - SCHEDULER_FLOW_MANAGER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - SCHEDULER_JOB_MANAGER_ADDRESS=jobmanager:${JOB_MANAGER_PORT}
      - SCHEDULER_JOB_MANAGER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - SCHEDULER_JOB_MANAGER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - scheduler

  sourcemanager:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-sourcemanager"
    command: "sourcemanager start -c /dataworkbench/conf/sourcemanager.yaml"
    ports:
      - "${SOURCE_MANAGER_PORT}:${SOURCE_MANAGER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
      - dataworkbench-jaeger
    environment:
      - SOURCE_MANAGER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - SOURCE_MANAGER_GRPC_SERVER_ADDRESS=0.0.0.0:${SOURCE_MANAGER_PORT}
      - SOURCE_MANAGER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - SOURCE_MANAGER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - SOURCE_MANAGER_METRICS_ENABLED=${METRICS_ENABLED}
      - SOURCE_MANAGER_METRICS_SERVER_ADDRESS=0.0.0.0:${SOURCE_MANAGER_METRICS_PORT}
      - SOURCE_MANAGER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - SOURCE_MANAGER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - SOURCE_MANAGER_MYSQL_USERS=${MYSQL_ROOT_USERS}
      - SOURCE_MANAGER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SOURCE_MANAGER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
      - SOURCE_MANAGER_TRACER_SERVICE_NAME=sourcemanager
      - SOURCE_MANAGER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - sourcemanager

  udfmanager:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-udfmanager"
    command: "udfmanager start -c /dataworkbench/conf/udfmanager.yaml"
    ports:
      - "${UDF_MANAGER_PORT}:${UDF_MANAGER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
    environment:
      - UDF_MANAGER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - UDF_MANAGER_GRPC_SERVER_ADDRESS=0.0.0.0:${UDF_MANAGER_PORT}
      - UDF_MANAGER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - UDF_MANAGER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - UDF_MANAGER_METRICS_ENABLED=${METRICS_ENABLED}
      - UDF_MANAGER_METRICS_SERVER_ADDRESS=0.0.0.0:${UDF_MANAGER_METRICS_PORT}
      - UDF_MANAGER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - UDF_MANAGER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - UDF_MANAGER_MYSQL_USERS=${MYSQL_ROOT_USERS}
      - UDF_MANAGER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - UDF_MANAGER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - udfmanager

  zeppelinscale:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-zeppelinscale"
    command: "zeppelinscale start -c /dataworkbench/conf/zeppelinscale.yaml"
    ports:
      - "${ZEPPELIN_SCALE_PORT}:${ZEPPELIN_SCALE_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
    environment:
      - ZEPPELIN_SCALE_ZEPPELIN_SERVER_ADDRESS=zeppelin:8080
      - ZEPPELIN_SCALE_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - ZEPPELIN_SCALE_GRPC_SERVER_ADDRESS=0.0.0.0:${ZEPPELIN_SCALE_PORT}
      - ZEPPELIN_SCALE_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - ZEPPELIN_SCALE_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - ZEPPELIN_SCALE_METRICS_ENABLED=${METRICS_ENABLED}
      - ZEPPELIN_SCALE_METRICS_SERVER_ADDRESS=0.0.0.0:${ZEPPELIN_SCALE_METRICS_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - zeppelinscale

  jobwatcher:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-jobwatcher"
    command: "jobwatcher start -c /dataworkbench/conf/jobwatcher.yaml"
    ports:
      - "${JOB_WATCHER_PORT}:${JOB_WATCHER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
    environment:
      - JOB_WATCHER_JOB_WORKS=16
      - JOB_WATCHER_JOBDEVELOPER_SERVER=jobdeveloper:${JOB_DEVELOPER_PORT}
      - JOB_WATCHER_PICKUP_ALONE_JOBS=1
      - JOB_WATCHER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - JOB_WATCHER_GRPC_SERVER_ADDRESS=0.0.0.0:${JOB_WATCHER_PORT}
      - JOB_WATCHER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - JOB_WATCHER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - JOB_WATCHER_METRICS_ENABLED=${METRICS_ENABLED}
      - JOB_WATCHER_METRICS_SERVER_ADDRESS=0.0.0.0:${JOB_WATCHER_METRICS_PORT}
      - JOB_WATCHER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - JOB_WATCHER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - JOB_WATCHER_MYSQL_USERS=${MYSQL_ROOT_USERS}
      - JOB_WATCHER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JOB_WATCHER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - jobwatcher

  jobdeveloper:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-jobdeveloper"
    command: "jobdeveloper start -c /dataworkbench/conf/jobdeveloper.yaml"
    ports:
      - "${JOB_DEVELOPER_PORT}:${JOB_DEVELOPER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - dataworkbench-db-ctrl
    environment:
      - JOB_DEVELOPER_ZEPPELIN_FLINK_HOME=/zeppelin/flink/flink-1.11.2
      - JOB_DEVELOPER_ZEPPELIN_FLINK_EXECUTE_JARS=MySQL:/opt/zeppelin/lib/flink-connector-jdbc_2.11-1.11.2.jar,/opt/zeppelin/lib/mysql-connector-java-8.0.21.jar;PostgreSQL:/opt/zeppelin/lib/flink-connector-jdbc_2.11-1.11.2.jar,/opt/zeppelin/lib/postgresql-42.2.18.jar;Kafka:/opt/zeppelin/lib/flink-sql-connector-kafka_2.11-1.11.2.jar;ClickHouse:/opt/zeppelin/lib/flink-connector-clickhouse-1.11.0.jar
      - JOB_DEVELOPER_UDFMANAGER_SERVER=udfmanager:${UDF_MANAGER_PORT}
      - JOB_DEVELOPER_SOURCEMANAGER_SERVER=sourcemanager:${SOURCE_MANAGER_PORT}
      - JOB_DEVELOPER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - JOB_DEVELOPER_GRPC_SERVER_ADDRESS=0.0.0.0:${JOB_DEVELOPER_PORT}
      - JOB_DEVELOPER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - JOB_DEVELOPER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - JOB_DEVELOPER_METRICS_ENABLED=${METRICS_ENABLED}
      - JOB_DEVELOPER_METRICS_SERVER_ADDRESS=0.0.0.0:${JOB_WATCHER_METRICS_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - jobdeveloper

  jobmanager:
    image: "dataworkbench/dataworkbench"
    container_name: "dataworkbench-jobmanager"
    command: "jobmanager start -c /dataworkbench/conf/jobmanager.yaml"
    ports:
      - "${JOB_MANAGER_PORT}:${JOB_MANAGER_PORT}"
    links:
      - dataworkbench-db:dataworkbench-db
      - jobwatcher:jobwatcher
      - jobdeveloper:jobdeveloper
      - zeppelinscale:zeppelinscale
    depends_on:
      - dataworkbench-db-ctrl
      - dataworkbench-jaeger
    environment:
      - JOB_MANAGER_ZEPPELIN_SCALE_SERVER=zeppelinscale:${ZEPPELIN_SCALE_PORT}
      - JOB_MANAGER_JOBDEVELOPER_SERVER=jobdeveloper:${JOB_DEVELOPER_PORT}
      - JOB_MANAGER_JOBWATCHER_SERVER=jobwatcher:${JOB_WATCHER_PORT}
      - JOB_MANAGER_LOG_LEVEL=${DEFAULT_LOG_LEVEL}
      - JOB_MANAGER_GRPC_SERVER_ADDRESS=0.0.0.0:${JOB_MANAGER_PORT}
      - JOB_MANAGER_GRPC_SERVER_LOG_LEVEL=${GRPC_LOG_LEVEL}
      - JOB_MANAGER_GRPC_SERVER_LOG_VERBOSITY=${GRPC_LOG_VERBOSITY}
      - JOB_MANAGER_METRICS_ENABLED=${METRICS_ENABLED}
      - JOB_MANAGER_METRICS_SERVER_ADDRESS=0.0.0.0:${JOB_MANAGER_METRICS_PORT}
      - JOB_MANAGER_MYSQL_HOSTS=dataworkbench-db:${MYSQL_PORT}
      - JOB_MANAGER_MYSQL_DATABASE=${MYSQL_DATABASE}
      - JOB_MANAGER_MYSQL_USERS=${MYSQL_ROOT_USERS}
      - JOB_MANAGER_MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JOB_MANAGER_MYSQL_LOG_LEVEL=${MYSQL_LOG_LEVEL}
      - JOB_MANAGER_TRACER_SERVICE_NAME=jobmanager
      - JOB_MANAGER_TRACER_LOCAL_AGENT=dataworkbench-jaeger:${TRACER_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - jobmanager

  zeppelin:
    image: "dataworkbench/zeppelin"
    container_name: "dataworkbench-zeppelin"
    links:
      - flinkjobmanager:flinkjobmanager
    ports:
      - "${ZEPPELIN_PORT}:${ZEPPELIN_PORT}"
    depends_on:
      - flinkjobmanager
      - flinktaskmanager
    environment:
      - LIB_URL=${LIB_URL}
      - LIB_NAMES=${LIB_NAMES}
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - zeppelin

  flinkjobmanager:
    image: "flink:1.11.2-scala_2.11"
    container_name: "dataworkbench-flink-jobmanager"
    links:
      - dataworkbench-db:dataworkbench-db
    ports:
      - "${FLINK_PORT}:${FLINK_PORT}"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flinkjobmanager
    networks:
      dataworkbench-net:
        aliases:
          - flinkjobmanager

  flinktaskmanager:
    image: "flink:1.11.2-scala_2.11"
    container_name: "dataworkbench-flink-taskmanager"
    links:
      - dataworkbench-db:dataworkbench-db
    depends_on:
      - flinkjobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flinkjobmanager
        taskmanager.numberOfTaskSlots: 10
    networks:
      dataworkbench-net:
        aliases:
          - flinktaskmanager

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: "dataworkbench-zookeeper"
    ports:
      - "2181:2181"
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - zookeeper

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: "dataworkbench-kafka"
    ports:
      - "9092:9092"
    links:
      - zookeeper:zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "json-file"
      options:
        max-size: ${LOG_MAX_SIZE}
        max-file: ${LOG_MAX_FILE}
    networks:
      dataworkbench-net:
        aliases:
          - kafka

