# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
# A headless service to create DNS records.
apiVersion: v1
kind: Service
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
  annotations:
    # TODO: Deprecated. Replace tolerate-unready-endpoints with
    # v1.Service.PublishNotReadyAddresses.
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 8485
    name: jn
  - port: 8480
    name: http
  clusterIP: None
  selector:
    app: hdfs-journalnode
    release: my-hdfs-journalnode
---
# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
spec:
  selector:
    matchLabels:
      app: hdfs-journalnode
  serviceName: my-hdfs-journalnode
  replicas: 3
  template:
    metadata:
      labels:
        app: hdfs-journalnode
        release: my-hdfs-journalnode
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#              - matchExpressions:
#                  - key: hdfs/nodetype
#                    operator: NotIn
#                    values:
#                      - namenode
      containers:
        - name: hdfs-journalnode
          image: uhopper/hadoop-namenode:2.7.2
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
          command: ["/entrypoint.sh"]
          args: ["/opt/hadoop-2.7.2/bin/hdfs", "--config", "/etc/hadoop", "journalnode"]
          ports:
          - containerPort: 8485
            name: jn
          - containerPort: 8480
            name: http
          volumeMounts:
            # Mount a subpath of the volume so that the journal subdir would be
            # a brand new empty dir. This way, we won't get affected by
            # existing files in the volume top dir.
            - name: editdir
              mountPath: /hadoop/dfs/journal
              subPath: journal
            - name: editdir
              mountPath: /hadoop/dfs/name
              subPath: name
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: hdfs-config
          configMap:
            name: my-hdfs-config
  volumeClaimTemplates:
    - metadata:
        name: editdir
      spec:
        accessModes:
          - "ReadWriteOnce"
        {{- if .Values.storageClass }}
        storageClassName: {{ .Values.storageClass }}
          {{- else }}
        storageClassName: journalnode-disks
          {{- end }}
        resources:
          requests:
            storage: "10Gi"
---
# Source: hdfs/charts/hdfs-journalnode-k8s/templates/journalnode-statefulset.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: my-hdfs-journalnode
  labels:
    app: hdfs-journalnode
    chart: hdfs-journalnode-k8s-0.1.0
    release: my-hdfs-journalnode
spec:
  selector:
    matchLabels:
      app: hdfs-journalnode
      release: my-hdfs-journalnode
  minAvailable: 2
